# This makefile builds courses material and exercise book in pdf format
# The first part builds courses materal, the second the exercise book. 
# If you want to build only one of the two parts, you must comment the other one.

########################## COURSES MATERIAL ##########################  
# PARAMETERS DEFINITION

PROJECT = dplyr

INPUT_DIR = input

OUTPUT_DIR = output/html

PURL_DIR = output/purl

HTML_FILES := $(patsubst %.Rmd, %.html, $(wildcard $(INPUT_DIR)/*.Rmd)) \
              $(patsubst %.md, %.html, $(wildcard $(INPUT_DIR)/*.md))

### COMPILE
all: toc html zip

zip:
	rm -f $(OUTPUT_DIR)/$(PROJECT).zip
	rm -f $(PURL_DIR)/R.zip
	zip -9 -r $(PROJECT).zip $(OUTPUT_DIR)/
	mv $(PROJECT).zip $(OUTPUT_DIR)/
	mv $(INPUT_DIR)/*.R $(PURL_DIR)/
	mv $(PURL_DIR)/options.R $(INPUT_DIR)/.
	zip -9 -r $(PURL_DIR)/R.zip $(PURL_DIR)/

toc:
	R --slave -e "source('../include/r/build-toc-html.R'); build_toc_html(path='$(INPUT_DIR)/',download_file='$(PROJECT).zip')"

html: $(HTML_FILES)

.PHONY: change_dir

change_dir:
	$(MAKE) -C $(INPUT_DIR)
 
%.html: %.Rmd
	R --slave -e "set.seed(100);rmarkdown::render('$<',output_dir='$(OUTPUT_DIR)/');setwd('$(INPUT_DIR)/');knitr::purl('../$<')"
	

%.html: %.md
	R --slave -e "set.seed(100);rmarkdown::render('$<',output_dir='$(OUTPUT_DIR)/')"


.PHONY: clean
clean:
	$(RM) -rf $(OUTPUT_DIR)/*

###################################################################

########################## EXERCISE BOOK ##########################
    	
### LIST OF SOURCE FILES (without extension: it will be used for .Rmd, .html and .R)
LIST = \
  1-intro \
	2-0-verbs \
	2-1-select \
	2-2-filter \
	2-3-arrange \
	2-4-mutate \
	2-5-summarise \
	3-group \
	4-chain \
	5-do \
	6-combining \
	9-tidyr \

### PARAMETERS
# PANDOC PATH (RSTUDIO VERSION)
PANDOC_PATH = /usr/lib/rstudio/bin/pandoc/pandoc

# PDF PARAMETERS
PDF_OUT = dplyr-exercises-questions.pdf
#PDF_OUT = dplyr-exercises-solutions.pdf
INPUT_PDF_DIR = exercises
OUTPUT_PDF_DIR = output/pdf

### LIST OF MD FILES TO BUILD PDF
MD_PATH = $(addprefix exercises/,$(LIST))
MD = $(addsuffix .md,$(MD_PATH))
MD_LIST = $(addsuffix .md,$(LIST))

# PANDOC PDF OPTIONS
PANDOC_PDF_OPTIONS = \
  --latex-engine xelatex  \
  --template='./../include/tex/manual-with-written-cover.tex' \
	--variable=geometry:a4paper \
	--variable=links-as-notes \
  --chapters \
  --number-sections \
	--toc


### COMPILE
# all: by default perform all actions

all: knitr pdf

#.PHONY: change_dir

#change_dir:
#	$(MAKE) -C $(INPUT_PDF_DIR)
	


# build md files from rmd
%.md: %.Rmd
	Rscript -e "require(knitr); knit('$<',quiet=FALSE)"


# build html files from md and upload
#%.html: %.md
#	Rscript -e "require(rmarkdown);  render('$<', html_document())" 
	#sed -i -e '1,/<body>/d' -e '/^<\/body>/,$$d' $*.html

# build R files from rmd and upload
#%.R: %.Rmd
#	Rscript -e "require(knitr);  purl('$<'); getwd()"



# build pdf file from md
$(PDF_OUT): $(MD_LIST)
	$(PANDOC_PATH) $(PANDOC_PDF_OPTIONS) $(MD_LIST) --output $(OUTPUT_PDF_DIR)/$(PDF_OUT)

# single actions
knitr: $(MD)
#html: $(addsuffix .html,$(MD_PATH))
#purl: $(addsuffix .R,$(MD_PATH))
pdf: $(PDF_OUT)

# clean:
	rm -f *.md *.html *.R

###################################################################

